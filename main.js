(()=>{"use strict";function e(e,t,c,n,o=!1){return{title:e,description:t,dueDate:c,priority:n,isDone:o}}(()=>{let t=new Array,c=[e("Home Work","2022-03-08","low")];const n=document.getElementById("add-button"),o=document.querySelector(".cancel-button"),i=document.querySelector(".submit"),a=document.getElementById("overlay"),r=document.querySelector(".low"),d=document.querySelector(".medium"),u=document.querySelector(".high"),l=document.querySelector("span.error"),s=document.querySelector("[data-title]"),m=document.querySelector("[data-about]"),v=document.getElementById("due-date"),y=document.querySelector(".add-project-button"),h=document.querySelector("#add-project"),p=document.querySelector("#cancel-project"),E=document.querySelector(".projects"),f=document.getElementById("project"),g=document.querySelector(".sidebar"),k=document.querySelector(".title-error");function L(e){const n=document.querySelector(".task-items");for(let o=0;o<e.length;o++){e[o].id="task"+o;const i=document.createElement("div");x(i,"item"),"low"==e[o].priority&&x(i,"low-prio"),"medium"==e[o].priority&&x(i,"mid-prio"),"high"==e[o].priority&&x(i,"high-prio"),P(n,i);const a=document.createElement("div");P(i,a);const r=document.createElement("input");r.setAttribute("type","checkbox"),r.setAttribute("id","checkbox");const d=document.createElement("div");x(d,"task-header"),D(d,e[o].title);const u=document.createElement("button");x(u,"delete-button"),u.innerHTML="&times;",P(a,r),P(a,d),P(a,u);const l=document.createElement("div");x(l,"thin-line"),P(i,l);const s=document.createElement("div");x(s,"task-info"),D(s,e[o].description),P(i,s);const m=document.createElement("div");x(m,"thin-line"),P(i,m);const v=document.createElement("div");x(v,"task-status"),P(i,v);const y=document.createElement("input");y.setAttribute("type","date"),y.setAttribute("name","date"),y.setAttribute("id","date"),y.value=e[o].dueDate,P(v,y),u.addEventListener("click",(()=>{i.remove(),console.log(t),console.log(c),t=t.filter((e=>{if(e.id!==t[o].id)return!0}))}))}}function S(){x(r,"active"),C(d,"active"),C(u,"active"),C(l,"active")}function q(){x(d,"active"),C(r,"active"),C(u,"active"),C(l,"active")}function b(){x(u,"active"),C(d,"active"),C(r,"active"),C(l,"active")}function w(){C(r,"active"),C(d,"active"),C(u,"active"),C(l,"active"),N(m,""),N(s,""),N(v,""),x(document.querySelector("div.form"),"active"),x(a,"active")}function A(){C(document.querySelector("div.form"),"active"),C(a,"active")}function I(){if(""==f.value)return x(k,"active"),H(k,"Please choose a project title"),x(h,"active"),void x(p,"active");x(E,"hide"),C(y,"hide"),function(){const e=document.createElement("img"),t=document.createElement("img");t.src="Images/close-circle-outline.svg",e.src="Images/format-list-checks.svg";const c=document.createElement("span");D(c,f.value);const n=document.createElement("div");P(n,e),P(n,c),P(n,t),x(n,"a-project"),P(g,n)}()}function j(){x(E,"hide"),C(y,"hide")}function B(){N(f,""),x(y,"hide"),C(E,"hide"),C(h,"active"),C(p,"active"),C(k,"active")}function x(e,t){e.classList.add(t)}function C(e,t){e.classList.remove(t)}function H(e,t){e.textContent=t}function N(e,t){e.value=t}function P(e,t){e.append(t)}function D(e,t){e.textContent=t}return{loadHomePage:function(){n.addEventListener("click",w),a.addEventListener("click",A),o.addEventListener("click",A),i.addEventListener("click",(()=>(console.log(t),console.log(c),function(e){const t=document.getElementsByClassName("item");for(;t.length>0;)t[0].parentNode.removeChild(t[0])}(),""==s.value||""==v.value?alert("Task Title is empty or you havent chose the due date"):r.classList.contains("active")||d.classList.contains("active")||u.classList.contains("active")?r.classList.contains("active")?(t.push(e(s.value,m.value,v.value,"low")),A(),L(t)):d.classList.contains("active")?(t.push(e(s.value,m.value,v.value,"medium")),A(),L(t)):u.classList.contains("active")?(t.push(e(s.value,m.value,v.value,"high")),A(),L(t)):void 0:(x(l,"active"),H(l,"Please choose a priority"))))),y.addEventListener("click",B),p.addEventListener("click",j),h.addEventListener("click",I),r.addEventListener("click",S),d.addEventListener("click",q),u.addEventListener("click",b),console.log((window.addEventListener("beforeunload",(()=>{localStorage.setItem("myArray",JSON.stringify(t))})),c=localStorage.getItem("myArray"),c=JSON.parse(c),c)),L(t)}}})().loadHomePage()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,