(()=>{"use strict";function e(e,t,c,n,i=!1){return{title:e,description:t,dueDate:c,priority:n,isDone:i}}const t=(()=>{let t=[],c=[];const n=document.getElementById("add-button"),i=document.querySelector(".cancel-button"),o=document.querySelector(".submit"),r=document.getElementById("overlay"),a=document.querySelector(".low"),d=document.querySelector(".medium"),u=document.querySelector(".high"),s=document.querySelector("span.error"),l=document.querySelector("[data-title]"),m=document.querySelector("[data-about]"),v=document.getElementById("due-date"),y=document.querySelector(".add-project-button"),f=document.querySelector("#add-project"),h=document.querySelector("#cancel-project"),E=document.querySelector(".projects"),p=document.getElementById("project"),g=document.querySelector(".sidebar"),L=document.querySelector(".title-error");function S(e){const c=document.querySelector(".task-items");for(let n=0;n<e.length;n++){e[n].id="task"+n;const i=document.createElement("div");x(i,"item"),"low"==e[n].priority&&x(i,"low-prio"),"medium"==e[n].priority&&x(i,"mid-prio"),"high"==e[n].priority&&x(i,"high-prio"),H(c,i);const o=document.createElement("div");H(i,o);const r=document.createElement("input");r.setAttribute("type","checkbox"),r.setAttribute("id","checkbox");const a=document.createElement("div");x(a,"task-header"),O(a,e[n].title);const d=document.createElement("button");x(d,"delete-button"),d.innerHTML="&times;",H(o,r),H(o,a),H(o,d);const u=document.createElement("div");x(u,"thin-line"),H(i,u);const s=document.createElement("div");x(s,"task-info"),O(s,e[n].description),H(i,s);const l=document.createElement("div");x(l,"thin-line"),H(i,l);const m=document.createElement("div");x(m,"task-status"),H(i,m);const v=document.createElement("input");v.setAttribute("type","date"),v.setAttribute("name","date"),v.setAttribute("id","date"),v.value=e[n].dueDate,H(m,v),d.addEventListener("click",(()=>{i.remove(),t=t.filter((t=>t.id!==e[n].id)),k(t)}))}}function k(e){localStorage.setItem("myArray",JSON.stringify(e))}function q(){x(a,"active"),D([d,u,s],"active")}function b(){x(d,"active"),D([a,u,s],"active")}function A(){x(u,"active"),D([d,a,s],"active")}function I(){D([a,d,u,s],"active"),P([m,l,v]),x([document.querySelector("div.form"),r],"active")}function j(){D([document.querySelector("div.form"),r],"active")}function B(){if(""==p.value)return x([L,h,f],"active"),void N(L,"Please choose a project title");x(E,"hide"),D(y,"hide"),function(){const e=document.createElement("img"),t=document.createElement("img");t.src="Images/close-circle-outline.svg",e.src="Images/format-list-checks.svg";const c=document.createElement("span");O(c,p.value);const n=document.createElement("div");H(n,e),H(n,c),H(n,t),x(n,"a-project"),H(g,n)}()}function C(){x(E,"hide"),D(y,"hide"),D(L,"active")}function w(){P(p),x(y,"hide"),D([E,f,h,L],"hide")}function x(e,t){if(Array.isArray(e))return e.forEach((e=>e.classList.add(t)));e.classList.add(t)}function D(e,t){if(Array.isArray(e))return e.forEach((e=>e.classList.remove(t)));e.classList.remove(t)}function N(e,t){e.textContent=t}function P(e,t){if(Array.isArray(e))return e.forEach((e=>e.value=""));e.value=""}function H(e,t){e.append(t)}function O(e,t){e.textContent=t}return{loadHomePage:function(){n.addEventListener("click",I),r.addEventListener("click",j),i.addEventListener("click",j),o.addEventListener("click",(()=>(function(e){const t=document.getElementsByClassName("item");for(;t.length>0;)t[0].parentNode.removeChild(t[0])}(),""==l.value||""==v.value?alert("Task Title is empty or you havent chose the due date"):a.classList.contains("active")||d.classList.contains("active")||u.classList.contains("active")?a.classList.contains("active")?(t.push(e(l.value,m.value,v.value,"low")),j(),S(t),k(t)):d.classList.contains("active")?(t.push(e(l.value,m.value,v.value,"medium")),j(),S(t),k(t)):u.classList.contains("active")?(t.push(e(l.value,m.value,v.value,"high")),j(),S(t),k(t)):void 0:(x(s,"active"),N(s,"Please choose a priority"))))),y.addEventListener("click",w),h.addEventListener("click",C),f.addEventListener("click",B),a.addEventListener("click",q),d.addEventListener("click",b),u.addEventListener("click",A),localStorage.getItem("myArray")&&(c=localStorage.getItem("myArray"),c=JSON.parse(c),t=[...t,...c]),S(t)}}})();document.addEventListener("DOMContentLoaded",t.loadHomePage)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,